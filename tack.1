.\" Automatically generated by Pandoc 2.11.3.2
.\"
.TH "TACK" "1" "June 2021" "" ""
.hy
.SH NAME
.PP
tack - a static site generator for the long run
.SH SYNOPSIS
.PP
\f[B]tack\f[R] [\f[I]ACTION\f[R]] [\f[I]SITEDIR\f[R]]
.SH DESCRIPTION
.PP
Tack reads website sources, like Mustache HTML templates, Markdown
content markup, and YAML site & page variables, and \[lq]tacks them
together\[rq] to create a static website that can easily be hosted
anywhere.
.PP
The tool is completely self-contained and has no runtime dependencies.
This ensures that updates to the websites you are creating now are still
easily possible do a few years down the road.
.SH ACTIONS
.TP
\f[B]tack\f[R]
Tack the site together into the folder \f[C]output\f[R].
This is the default action, if no verb is specified.
.TP
\f[B]serve\f[R]
Tack the site together and start a web server on port \f[C]8080\f[R]
which can be used to get a live preview of the tacked website.
Changes to the source files (content, templates, assest, \&...) are
re-tacked and reflected in the served site automatically.
.TP
\f[B]help\f[R]
Display a friendly help message.
.SH SITE DIRECTORY
.PP
The optional \f[I]SITEDIR\f[R] arguments refers to a directory that
contains the sources of the website project that should be built by
tack.
.PP
If this argument is not specified, tack uses the current working
directory.
.PP
A valid \f[I]SITEDIR\f[R] contains:
.IP \[bu] 2
\f[C]content\f[R] directory with at least a single metadata
(\f[C]*.yaml\f[R]) or markup (\f[C]*.md\f[R]) file
.IP \[bu] 2
\f[C]templates\f[R] subdirectory with at least a single template file
(\f[C]*.mustache\f[R])
.IP \[bu] 2
Optionally: a \f[C]public\f[R] subdirectory with static files
.IP \[bu] 2
Optionally: a \f[C]site.yaml\f[R] metadata file to define some site
variables
.SH PAGE VARIABLES
.PP
For each rendered page, a set of variables will be available to fill
into the chosen template.
These variables are read from the page\[cq]s metadata files.
.PP
Next to the user-specified variables, these per-page ones are
automatically generated by tack:
.TP
\f[B]\f[CB]permalink\f[B]\f[R]
An absolute link to the referenced page.
.TP
\f[B]\f[CB]slug\f[B]\f[R]
Last part of the directory name, stripped of any enumeration prefixes.
.TP
\f[B]\f[CB]name\f[B]\f[R]
A titlecased version of slug.
.TP
\f[B]\f[CB]current\f[B]\f[R]
Boolean to signify if the referenced page is the one currently being
rendered (useful to build active elements in navigation menus).
.TP
\f[B]\f[CB]first\f[B]\f[R]
(Only if this page is being iterated over as part of a list) Boolean to
signify if the referenced page is the first one of the list.
.TP
\f[B]\f[CB]last\f[B]\f[R]
(Only if this page is being iterated over as part of a list) Boolean to
signify if the referenced page is the first one of the list.
.SH RENDERING CONTEXT
.PP
Additionally to the page variables listed above, when rendering a page,
these variables are availble to the template, too:
.TP
\f[B]\f[CB]parent\f[B]\f[R]
An object detailing the parent page (giving the variables listed above),
if the current page is not a top-level one.
.TP
\f[B]\f[CB]siblings\f[B]\f[R]
List of all sibling pages.
.TP
\f[B]\f[CB]children\f[B]\f[R]
List of all child pages.
.TP
\f[B]\f[CB]posts\f[B]\f[R]
List of all child pages whose directory name starts with
\f[C]yyyy-mm-dd\f[R].
.TP
\f[B]\f[CB]ancestors\f[B]\f[R]
List of all ancestor pages.
.TP
\f[B]\f[CB]navigation\f[B]\f[R]
List of all toplevel pages to allow for building navigation menus.
.TP
\f[B]\f[CB]menu\f[B]\f[R]
List of all pages on the same level (siblings + current page) to allow
for building navigation menus.
.SH EXIT STATUS
.PP
Tack returns a non-zero exit code if tacking the website was not
successful due to being unable to read or process any of the input files
or if the \f[C]output\f[R] directory cannot be written to.
.SH BUGS
.PP
To report bugs, please go to create a ticket at
https://github.com/roblillack/tack/issues
.SH SEE ALSO
.PP
jekyll(1)
.SH AUTHORS
Robert Lillack.
